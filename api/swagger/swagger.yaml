swagger: "2.0"
info:
  version: "0.0.1"
  title: Starships Collection
# during dev, should point to your local machine
host: 'arcane-dawn-31734.herokuapp.com'
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http 
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /starship:
    $ref: 'https://arcane-dawn-31734.herokuapp.com/paths/starship.yaml'
  /starships/{id}:
    $ref: https://arcane-dawn-31734.herokuapp.com/paths/starship_id.yaml
  /films:
    $ref: http://arcane-dawn-31734.herokuapp.com/paths/film.yaml             
  /films/{id}:
    $ref: https://arcane-dawn-31734.herokuapp.com/paths/film_id.yaml       
  /people:
    $ref: https://arcane-dawn-31734.herokuapp.com/paths/people.yaml             
  /people/{id}:
    $ref: https://arcane-dawn-31734.herokuapp.com/paths/people_id.yaml          
  /vehicles:
    $ref: https://arcane-dawn-31734.herokuapp.com/paths/vehicle.yaml             
  /vehicles/{id}:
    $ref: https://arcane-dawn-31734.herokuapp.com/paths/vehicle_id.yaml       
  /planets:
    $ref: https://arcane-dawn-31734.herokuapp.com/paths/planet.yaml             
  /planets/{id}:
    $ref: https://arcane-dawn-31734.herokuapp.com/paths/planet_id.yaml     
  /species:
    $ref: https://arcane-dawn-31734.herokuapp.com/paths/specie.yaml             
  /species/{id}:
    $ref: https://arcane-dawn-31734.herokuapp.com/paths/specie_id.yaml  

  
  /seeds:
    x-swagger-router-controller: seeds
    get:
      operationId: populate
      summary: populate db
      description: populate all db
      responses:
            "200":
              description: Success
              schema:
                $ref: "#/definitions/GeneralResponse"
            default:
              description: Error
              schema:
                $ref: "#/definitions/ErrorResponse"     
    
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
 # ---------------------------------------------------------#
 # ---------------------------------------------------------#
 # General Responses
 # ---------------------------------------------------------#
 # ---------------------------------------------------------#       
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  GeneralResponse:
      type: object
      properties:
        success:
          type: number
          description: returns 1 if successful
        description:
          type: string
          description: a short comment 
      required:
        - success
        - description